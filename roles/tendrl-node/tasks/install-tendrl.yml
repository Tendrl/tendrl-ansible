---

- name: Collect etcd server address
  set_fact:
    etcd_server_address: "{{ hostvars[groups['tendrl-servers'][0]]['ansible_default_ipv4']['address'] }}"

- name: Collect etcd server address
  set_fact:
    etcd_server_address: "{{ hostvars[groups['tendrl-servers'][0]]['ansible_eth1']['ipv4']['address'] }}"
  when: virtualbox  # workaround for default NAT eth0 interface in virtualbox

- name: DEBUG!
  debug:
    msg: "Using {{ etcd_server_address }} to connect to etcd server"

- name: Install tendrl repo
  get_url:
    url: https://copr.fedorainfracloud.org/coprs/tendrl/tendrl/repo/epel-7/tendrl-tendrl-epel-7.repo
    dest: /etc/yum.repos.d/tendrl-tendrl-epel-7.repo

- name: Disable SELinux
  selinux:
    state: disabled

- name: Activate EPEL
  package:
    name: epel-release
    state: latest

# This needs the RHEL extra repo
- name: Ensure tendrl-node-agent is installed
  package:
    name: tendrl-node-agent
    state: latest

- name: Configure etcd connection for tendrl-node-agent
  lineinfile:
    dest: /etc/tendrl/node-agent/node-agent.conf.yaml
    regexp: '^etcd_connection'
    line: "etcd_connection : {{ etcd_server_address }}"

- name: Start tendrl-node-agent and enable it on boot
  service:
    name: tendrl-node-agent
    enabled: yes
    state: restarted

- name: Ensure tendrl-node-monitoring is installed
  package:
    name: tendrl-node-monitoring
    state: latest

- name: Configure etcd connection for tendrl-node-monitoring
  lineinfile:
    dest: /etc/tendrl/node-monitoring/node-monitoring.conf.yaml
    regexp: '^etcd_connection'
    line: "etcd_connection : {{ etcd_server_address }}"

- name: Configure tendrl-node-01 to be a ceph provisioner
  lineinfile:
    dest: /etc/tendrl/node-agent/node-agent.conf.yaml
    regexp: '^  - provisioner\/ceph'
    insertafter: '^tags:'
    line: '  - provisioner/ceph'
  when: ansible_hostname == 'tendrl-node-01'
  tags: testing

- name: Start tendrl-node-monitoring and enable it on boot
  service:
    name: tendrl-node-monitoring
    enabled: yes
    state: started

#- firewalld:
#    zone: public
#    port: 2379/tcp
#    permanent: true
#    state: enabled

#- firewalld:
#    zone: public
#    port: 2379/tcp
#    permanent: true
#    state: enabled

#- firewalld:
#    zone: public
#    port: 9292/tcp
#    permanent: true
#    state: enabled

#- firewalld:
#    zone: public
#    port: 80/tcp
#    permanent: true
#    state: enabled

# http://IP:2379/v2/keys/nodes should list all nodes
